on:
  push:
    branches:
      - austin-dev
  pull_request:
    branches:
      - austin-dev

name: Rust CI

jobs:
  build:
    name: Build, lint, test and bench
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0, 2023-01-05

      - name: Install stable toolchain
        id: toolchain
        uses: dtolnay/rust-toolchain@e12eda571dc9a5ee5d58eecf4738ec291c66f295 # v1, 2023-02-19
        with:
          toolchain: stable
          targets: wasm32-unknown-unknown

      - name: Install Tauri system dependencies
        run: |
          sudo apt install -y libgtk-3-dev libsoup2.4-dev libjavascriptcoregtk-4.0-dev libwebkit2gtk-4.0-dev

      # Use both `**/Cargo.lock` and `**/Cargo.toml` in cache key: While Cargo.lock is enough to
      # ensure that we clear the cache when dependencies change, we currently don't treat forgetting
      # to commit Cargo.lock as a failure. Changing Cargo.toml without bumping the dependencies may
      # clear the cache when it isn't necessary.
      - name: Use build cache
        uses: actions/cache@9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7 # v3.0.11, 2022-10-13
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ~/.cargo/bin/cargo-tauri/
            ~/.cargo/bin/trunk/
            target/
          key: ${{ runner.os }}-cargo-${{ steps.toolchain.outputs.cachekey }}-${{ hashFiles('**/Cargo.lock', '**/Cargo.toml') }}

      - name: Install trunk, tauri-cli
        run: |
          # if $1 isn't a callable program, install $2.
          cargo_install_() {
            if ! command -v $1 >/dev/null 2>&1; then
              cargo install --locked $2
            fi
          }
          cargo_install_ trunk trunk
          cargo_install_ cargo-tauri tauri-cli

      - name: cargo fmt
        run: cargo fmt --all -- --check

      - name: Build yew front-end (trunk build)
        run: cd frontend && trunk build --release

      - name: Build tauri back-end (cargo build)
        run: cargo build --all-targets

      - name: cargo clippy
        run: cargo clippy --all-targets -- -D warnings

      - name: cargo test
        run: cargo test --all-targets

      # - name: cargo bench
      #   run: cargo bench --all-targets
